<?xml version="1.0" encoding="utf-8"?>
<?xyl-use href="hoa://Application/View/Shared/Definition/Code.xyl"?>
<?xyl-use href="hoa://Application/View/Shared/Definition/Comment.xyl"?>
<?xyl-overlay href="hoa://Application/View/Shared/Overlay/Code.xyl"?>
<?xyl-overlay href="hoa://Application/View/Shared/Overlay/Comment.xyl"?>

<overlay xmlns="http://hoa-project.net/xyl/xylophone">
<yield id="main_content">

  <h1>Guide du contributeur</h1>

  <p><strong>Contribuer</strong> à un projet est génial ! Cependant, il peut
  s'avérer difficile de savoir exactement <strong>comment le faire</strong> et
  <strong>qu'est-ce qui doit être fait</strong>. Ce guide du contributeur va vous
  aider à faire de belles contributions !</p>

  <h2 id="Table_of_contents">Table des matières</h2>

  <tableofcontents id="main-toc" />

  <h2 id="Introduction" for="main-toc">Introduction</h2>

  <p>Hoa est un gros project. Ce projet ne peut pas vivre sans l'aide d'une
  précieuse communauté. Cette communauté est constituée de développeurs,
  réguliers ou non, parfois même de personnes qui ne sont pas des développeurs
  mais des amoureux de la programmation, des personnes qui utilisent PHP,
  parfois pas…</p>
  <p>Chaque expérience, chaque idée, chaque chose qui pourrait améliorer Hoa
  pour des milliers d'utilisateurs à travers le monde est
  <strong>inestimable</strong>. Cependant, contribuer à un projet n'est pas une
  tâche facile. Il y a quelques pré-requis, quelques informations utiles, qu'il
  faut connaître :</p>
  <ul>
    <li>l'organisation ;</li>
    <li>qui sont les personnes à qui parler ; et</li>
    <li>d'une manière générale, quoi faire exactement ?</li>
  </ul>
  <p>Nous espérons que ce guide du contributeur saura répondre à vos
  questions.</p>

  <h2 id="Prerequisites" for="main-toc">Pré-requis</h2>

  <p>Avant de contribuer à Hoa, nous devons clarifier quelques
  <strong>pré-requis</strong> en terme d'outils, de compétences etc. afin de
  rendre votre voyage aussi plaisant que possible.</p>

  <h3 id="Tools" for="main-toc">Outils</h3>

  <p>Pour contribuer à Hoa, les outils suivants sont requis :</p>
  <ul>
    <li><a href="http://php.net/">PHP</a> ;</li>
    <li><a href="http://git-scm.com/">Git</a> ;</li>
    <li><a href="http://getcomposer.org/">Composer</a> ;</li>
    <li><a href="http://curl.haxx.se/">cURL</a>.</li>
  </ul>
  <p>C'est tout ! N'importe quel autre outil sera automatiquement installé au
  besoin.</p>

  <h3 id="Skills" for="main-toc">Compétences</h3>

  <p>Ce point important mérite d'être clarifier rapidement. Il n'y a absolument
  <strong>aucun niveau de compétence minimum requis</strong> pour contribuer à
  Hoa. Si vous avez une idée mais que vous ne savez pas comment la développer :
  aucun problème, ouvrez simplement une discussion et nous serons ravis de vous
  aider à comprendre comment la réaliser ! Si vous avez des connaissances plus
  approfondies que nous dans un domaine spécifique (ce qui risque fort d'être le
  cas souvent), nous serons très content d'apprendre de vous ! La communauté de
  Hoa est riche parce qu'elle est constituée de personnes très
  <strong>différentes</strong>. Nous sommes très impatients de voir votre
  première contribution !</p>
  <p>Également, il est important de noter que nous allons vous montrer quelques
  commandes Git. Notre objectif n'est pas de fournir un guide Git. Les commandes
  données sont celles que vous utiliserez probablement quotidiennement, mais si
  vous ne les comprenez pas ou si vous ne vous sentez pas confortables avec Git,
  vous devez soit lire <a href="http://git-scm.com/book/">la documentation de
  Git</a>, soit demander de l'aide. Ce qui introduit la prochaine section.</p>

  <h3 id="Getting_help" for="main-toc">Obtenir de l'aide</h3>

  <p>À n'importe quel moment, vous trouverez au moins une personne pour vous
  <strong>aider</strong>. Hoa, en tant qu'ensemble de bibliothèques, est projet
  vaste et tous les <strong>hoackers</strong> ne sont pas présents en
  permanence, mais nous sommes quasiment certain que vous rencontrerez quelqu'un
  qui pourra vous aider ou vous rediriger vers quelqu'un d'autre. Un hoacker est
  contributeur de longue date qui a une connaissance approfondie ou large du
  projet. Cela inclu les relecteurs ou les <em lang="en">commiters</em>.</p>
  <p>Deux façons d'obtenir de l'aide :</p>
  <ul>
    <li><a href="@community#IRC">sur IRC</a>, pour une aide en
    <strong>temps-réel</strong> et <strong>synchrone</strong> ;</li>
    <li><a href="@community#Mailing-lists">sur des
    <em lang="en">mailing-lists</em></a>, pour une aide
    <strong>asynchrone</strong> avec plus de monde.</li>
  </ul>

  <h2 id="What_to_do" for="main-toc">Quoi faire ?</h2>

  <p>Hoa a plus de 50 bibliothèques, en plus d'autres sous-projets. Chaque
  bibliothèque vit dans un <strong>dépôt spécifique</strong>. C'est difficile
  d'avoir un <strong>aperçu</strong> du travail courant :</p>
  <ul>
    <li>qu'est-ce qui doit être fait ?</li>
    <li>qu'est-ce qui est prêt à être fait ?</li>
    <li>qu'est-ce qui est en cours ? ou</li>
    <li>qu'est-ce qui est en relecture ?</li>
  </ul>
  <p>Toutes ces questions sont <strong>légitimes</strong> quand nous démarrons
  avec un projet (parfois même si nous sommes contributeurs depluis
  longtemps !).</p>

  <h3 id="Boards_for_an_overview" for="main-toc">Des tableaux comme aperçus</h3>

  <p>Chaque bibliothèque à un <a href="@literature#Hack_book">chapitre dans le
  <em lang="en">hack book</em></a>. Chaque chapitre fournit dans son en-tête des
  liens utiles, tels que :</p>
  <ul>
    <li>
      <img src="hoa://Application/Public/Image/Icon/Waffle.svg" alt="Git" height="25px" />
      son <strong>tableaux</strong> ;
    </li>
    <li>
      <img src="hoa://Application/Public/Image/Icon/Git.svg" alt="Git" height="25px" />
      son <strong>dépôt Git</strong> ;
    </li>
    <li>
      <img src="hoa://Application/Public/Image/Icon/Github.svg" alt="Github" height="25px" />
      son <strong>miroir Github</strong>.
    </li>
  </ul>
  <p>Le <strong>tableau</strong> est la place où tous les travaux apparaissent
  sous forme de colonnes qui représentent la progression :</p>
  <ol>
    <li><strong><em lang="en">backlog</em></strong>, les travaux en
    discussion ;</li>
    <li><strong><em lang="en">ready</em></strong>, les travaux qui sont prêts
    à être fait ;</li>
    <li><strong><em lang="en">in progress</em></strong>, les travaux qui sont en
    train d'être fait par certains contributeurs ;</li>
    <li><strong><em lang="en">done</em></strong>, les travaux qui ont été
    récemment fait.</li>
  </ol>
  <p>Il est probable que vous sachiez que le <code>Central</code> est un dépôt
  (en lecture seule) rassemblant toutes les bibliothèques de Hoa en un seul
  endroit. Ainsi, comme attendu, <a href="@board:repository=Central">le tableau
  de <code>Central</code></a> offre le <strong>plus haut aperçu</strong> de tous
  les travaux courants de toutes les bibliothèques de Hoa.</p>

  <h3 id="What_difficulty" for="main-toc">Quelle difficulté ?</h3>

  <p>Afin de faciliter le processus de contribution, nous essayons d'attacher
  certaines étiquettes (<em lang="en">labels</em>) à chaque travail (comme
  <code>bug</code> ou <code>enhancement</code>). Certains d'entre eux offrent
  une indication sur la <strong>difficulté</strong> :</p>
  <ul>
    <li><code>casual</code>, qui peut être fait par un <strong>nouveau</strong>
    contributeur ou qui peut être fait <strong>rapidement</strong> ;</li>
    <li><code>medium</code>, requière <strong>certaines compétences</strong>
    pour effectuer ce travail ;</li>
    <li><code>hard</code>, requière <strong>des connaissances fortes</strong>
    dans le code ou le domaine concerné.</li>
  </ul>
  <p>Heureusement, les tableaux offrent un moteur de recherche facilitant le tri
  des travaux à partir de votre profil ; ainsi :</p>
  <ul>
    <li><a href="@board:repository=Central&amp;search=difficulty: casual">les
    travaux <code>casual</code></a> ;</li>
    <li><a href="@board:repository=Central&amp;search=difficulty: medium">les
    travaux <code>medium</code></a> ;</li>
    <li><a href="@board:repository=Central&amp;search=difficulty: hard">les
    travaux <code>hard</code></a>.</li>
  </ul>
  <p>Maintenant que nous savons quoi faire, contribuons !</p>

  <h2 id="Set_up_the_environment" for="main-toc">Monter son environnement</h2>

  <p>Dans cette section nous allons voir comment mettre en place le dépôt (le
  code) et les dépendances (principalement pour exécuter les tests).</p>

  <h3 id="Repository" for="main-toc">Dépôt</h3>

  <p>Hoa héberge ses propres <a href="http://git.hoa-project.net/">dépôts
  Git</a>. Les règles sont les suivantes :</p>
  <ul>
    <li>tout le monde peut <strong>lire</strong> à travers <strong>HTTP</strong> :</li>
    <pre><code class="language-shell">$ git clone http://git.hoa-project.net/Library/Websocket.git</code></pre>
    <li>les <em lang="en">commiters</em> peuvent <strong>lire et écrire</strong>
    à travers <strong>SSH</strong> :</li>
    <pre><code class="language-shell">$ git clone git@git.hoa-project.net:Library/Websocket.git</code></pre>
  </ul>
  <p>Comme mentionné sur <a href="@source#Version_manager_(Git)">la page des
  sources</a>, la plupart des dépôts ont des
  <a href="https://github.com/hoaproject">miroirs sur Github</a>. Nous utilisons
  Github comme <strong><em lang="en">bug tracker</em></strong>, où toutes les
  <em lang="en">issues</em> (travail) et les contributions se déroulent. Aussi,
  plusieurs outils sont liés à Github comme les tableaux ou Composer (détaillé
  ci-après). Les miroirs sont uni-directionnels et un robot est responsable de
  tout <strong>synchroniser</strong>, pas d'inquiétude.</p>
  <p>C'est pourquoi nous vous suggérons de démarrer en clonant une bibliothèque
  depuis Github, par exemple <a href="@github:repository=Websocket">la
  bibliothèque <code>Hoa\Websocket</code></a> :</p>
  <pre><code class="language-shell">$ mkdir Hoa
$ cd Hoa
$ git clone https://github.com/hoaproject/Websocket.git
$ cd Websocket</code></pre>
  <p>Si <a href="https://help.github.com/articles/generating-ssh-keys/">Github
  connaît votre clé SSH</a>, nous suggérons alors :</p>
  <pre><code class="language-shell">$ git clone git@github.com:hoaproject/Websocket.git</code></pre>
  <p>Immédiatement après, pour éviter tout conflit potentiel, nous suggérons de
  créer une nouvelle branche :</p>
  <pre><code class="language-shell">$ git checkout -b incoming</code></pre>
  <p>Créer une branche <code>incoming</code> <strong>protège</strong> la branche
  <code>master</code>. Le <code>master</code> est très important pour Hoa, parce
  qu'il utilise <a href="@source#Rush_Release"><em lang="en">Rush
  Release</em></a> comme système de <em lang="en">release</em>. Cela implique
  que la branche <code>master</code> contient toujours les derniers patches.
  Ainsi, pour mettre à jour la branche <code>master</code>, vous avez seulement
  à exécuter :</p>
  <pre><code class="language-shell">$ git pull origin master:master</code></pre>
  <p>Parce que votre branche référente est <code>incoming</code> et pas
  <code>master</code>, il est plus facile de maintenir votre dépôt à jour. Nous
  détaillerons tout ça rapidement.</p>
  <p>Bien sûr, vous n'allez pas travailler directement sur le dépôt de Hoa parce
  que : premièrement c'est un miroir, deuxièmement vous n'avez pas les
  permissions et troisièmement c'est une mauvaise pratique. Vous devez
  <a href="https://help.github.com/articles/fork-a-repo/"><em>forker</em> le
  dépôt</a>. Un fork est <strong>copie</strong> du dépôt, permettant de faire ce
  que bon vous semble sans aucun restriction. Pour forker un dépôt, par exemple
  <a href="@github:repository=Websocket"><code>Hoa\Websocket</code></a>, vous
  pouvez utiliser
  <a href="https://github.com/hoaproject/Websocket/fork">l'interface de
  Github</a> ou exécuter la commande suivante (en considérant que la variable
  <code>$me</code> représente votre nom d'utilisateur Github) :</p>
  <pre><code class="language-shell">$ me=&amp;lt;your Github username>
$ curl -X POST https://api.github.com/repos/hoaproject/Websocket/forks --user $me</code></pre>
  <p>Maintenant que vous avez votre propre fork, nous pouvons dire à votre dépôt
  qu'il y a un autre <strong><em lang="en">remote</em></strong>. Un
  <em lang="en">remote</em> est une autre source pour votre dépôt. Ainsi :</p>
  <pre><code class="language-shell">$ git remote add me git@github.com:$me/Websocket.git</code></pre>
  <p>À ce stade, nous devrions voir 2 <em lang="en">remotes</em>, comme dans
  l'exemple suivant :</p>
  <pre><code class="language-shell">$ git remote --verbose
me  git@github.com:$me/Websocket.git (fetch)
me  git@github.com:$me/Websocket.git (push)
origin  git@github.com:hoaproject/Websocket.git (fetch)
origin  git@github.com:hoaproject/Websocket.git (push)</code></pre>
  <p>Bonus : si vous voulez voir toutes les <em lang="en">pull requests</em>
  localement, c'est à dire toutes les <strong>contributions en cours</strong>
  (peut être utile pour aider ou tester la contribution de quelqu'un d'autre),
  nous allons créer un nouveau <em lang="en">remote</em> appelé
  <code>github-pr</code>. Il pointera vers la même URL qu'<code>origin</code>
  dans ce cas particulier mais nous créons un autre <em lang="en">remote</em>
  pour clarifier le processus. Ainsi :</p>
  <pre><code class="language-shell">$ git remote add github-pr git@github.com:hoaproject/Websocket.git
$ git config remote.github-pr.fetch '+refs/pull/*/head:refs/remotes/origin/pr/*'
$ git remote --verbose
github-pr   git@github.com:hoaproject/Websocket.git (fetch)
github-pr   git@github.com:hoaproject/Websocket.git (push)
me  git@github.com:$me/Websocket.git (fetch)
me  git@github.com:$me/Websocket.git (push)
origin  git@github.com:hoaproject/Websocket.git (fetch)
origin  git@github.com:hoaproject/Websocket.git (push)</code></pre>
  <p>Donc pour résumer, nous avons 3 <em lang="en">remotes</em>, c'est à dire
  3 sources différentes pour le même code :</p>
  <ol>
    <li><code>origin</code>, le dépôt de Hoa (le miroir Github) ;</li>
    <li><code>me</code>, votre fork ;</li>
    <li><code>github-pr</code>, toutes les <em lang="en">pull requests</em> du
    dépôt de Hoa.</li>
  </ol>
  <p>Finallement, pour obtenir toutes les données de tous les
  <em lang="en">remotes</em> :</p>
  <pre><code class="language-shell">$ git fetch --all</code></pre>

  <comments />
</yield>
</overlay>
