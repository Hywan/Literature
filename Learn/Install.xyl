<?xml version="1.0" encoding="utf-8"?>
<?xyl-use href="../Definitions.xyl"?>

<definition xmlns="http://hoa-project.net/xyl/xylophone">
<yield name="chapter">

  <h1 id="Install">Manuel d'apprentissage<title_break />Installation</h1>

  <ul class="prev_next">
    <li><a href="@ll:chapter=Introduction"><previous_chapter />
        Introduction</a></li>
    <li><a href="@ll:chapter=Core">Exploration du noyau
        <next_chapter /></a></li>
  </ul>

  <p>Dans ce chapitre, nous nous intéressons à l'<strong>installation</strong>
  de Hoa, ainsi qu'à l'installation de PHP (normalement pas nécessaire sur tout
  système digne de ce nom).</p>

  <h2 id="Table_des_matieres">Table des matières</h2>

  <tableofcontents id="main-toc" />

  <h2 id="Installer_Hoa" for="main-toc">Installer Hoa</h2>

  <p>Nous nous intéressons à l'installation de Hoa à travers de multiples
  mécanismes.</p>

  <h3 id="Organisation_du_projet" for="main-toc">Organisation du projet</h3>

  <p>Hoa est un <strong>ensemble</strong> de <strong>bibliothèques</strong>. À
  chaque bibliothèque est associé un dépôt, une archive etc. L'ensemble des
  bibliothèques est représenté par le <strong>central</strong> et une seule
  bibliothèque est nécessaire pour utiliser toutes les autres :
  <code>Hoa\Core</code>.</p>
  <p>Pour organiser les fichiers entre eux, Hoa se base sur un principe très
  simple : les espaces de nom <strong>suivent</strong> l'architecture. Si nous
  avons une classe <code>A\B\C</code>, nous la trouverons dans le fichier
  <code>A/B/C.php</code>.  D'une manière moins informelle, les espaces de nom
  adopte le format suivant :
  <code><em>Vendor</em>\<em>Libraryname</em>(\<em>…</em>)*</code>. Par exemple,
  avec la bibliothèque <code>Hoa\Router\Http</code>, le <em
  class="en">vendor</em> est <code>Hoa</code> et le nom de la bibliothèque est
  <code>Router</code>. C'est pourquoi toutes les bibliothèques standards de Hoa
  devront être installées dans un dossier <code>Hoa/</code>. Toutefois, si vous
  voulez créer vos propres bibliothèques, il suffit de suivre cette même règle
  et de préciser à Hoa où se trouve le dossier parent du <em
  lang="en">vendor</em>, c'est tout.</p>
  <p>Hoa n'est pas le seul à avoir adopté ce principe. En effet, le
  <a href="http://www.php-fig.org/" lang="en">PHP Framework Interop Group</a> a
  rédigé plusieurs <strong>recommandations</strong> dont la fameuse PSR-0 qui
  améliore le <strong>partage</strong> et la <strong>réutilisation</strong> du
  code entre plusieurs projets.</p>
  <p>À ce stade, nous comprenons qu'il existe plusieurs façon d'installer Hoa :
  dans sa <strong>totalité</strong> (avec le central) ou <strong>en
  partie</strong> (choix des bibliothèques), et <strong>globalement</strong>
  (sur le système) ou <strong>localement</strong> (dans une application). Les
  prochaines sections détaillent tout ça.</p>

  <h3 id="Depuis_un_depot_Git" for="main-toc">Depuis un dépôt Git</h3>

  <p>Pour commencer, Hoa utilise <a href="http://git-scm.com">Git</a>, un
  logiciel puissant pour gérer les sources à travers des
  <strong>dépôts</strong>. L'ensemble des dépôts est accessible sur
  l'<a href="http://git.hoa-project.net">index des dépôts</a>. Ainsi, nous
  observons que le central est accessible à l'adresse
  <code>http://git.hoa-project.net/Central.git</code> et que les bibliothèques,
  quant à elles, suivent toutes la même convention de nommage, à savoir
  <code>http://git.hoa-project.net/Library/<em>Name</em>.git</code>. Ainsi, si
  nous voulons récupérer <code>Hoa\Core</code> :</p>
  <pre><code class="language-shell">$ git clone http://git.hoa-project.net/Library/Core.git Hoa/Core</code></pre>
  <p>Ajoutons <code>Hoa\Router</code> :</p>
  <pre><code class="language-shell">$ git clone http://git.hoa-project.net/Library/Router.git Hoa/Router</code></pre>
  <p>Ces bibliothèques sont dans le même dossier <code>Hoa/</code>.</p>
  <p>Si nous voulons mettre à jour une bibliothèque, nous ferons (dans le
  dossier de la bibliothèque) :</p>
  <pre><code class="language-shell">$ git pull</code></pre>
  <p>Notons que Git ne gère pas les dépendances entre les bibliothèques tout
  seul.</p>

  <h3 id="Depuis_Github" for="main-toc">Depuis Github</h3>

  <p>Hoa a également des miroirs, notamment sur
  <a href="http://github.com/hoaproject">Github</a>. Ces miroirs sont en
  permanence synchronisés avec les dépôts de Hoa. L'utilisation est la même que
  pour Git et le nommage des dépôts est également le même excepté pour les
  bibliothèques qui sont à la racine du profil et non pas dans un dossier
  <code>Library/</code>, ainsi :</p>
  <pre><code class="language-shell">$ git clone https://github.com/hoaproject/Core.git Hoa/Core</code></pre>

  <h3 id="Depuis_Composer_et_Packagist" for="main-toc">Depuis Composer et
  Packagist</h3>

  <p><a href="http://getcomposer.org/">Composer</a> est un gestionnaire de
  <strong>dépendances</strong> pour PHP. Une fois installé, il vous permet à
  travers un fichier <code>composer.json</code> de décrire les dépendances de
  votre projet (application, bibliothèque ou autre), puis de les installer, les
  mettre à jour etc.</p>
  <p>Nous donnons un exemple de fichier <code>composer.json</code> pour
  installer la bibliothèque <code>Hoa\Router</code> dans sa toute dernière
  version :</p>
  <pre><code class="language-json">{
    "require": {
        "hoa/router": "dev-master"
    },
    "minimum-stability": "dev"
}</code></pre>
  <p>Nous remarquons que le nom de la bibliothèque est entièrement en
  <strong>minuscule</strong>. Ensuite, il suffit d'utiliser Composer pour
  installer les bibliothèques :</p>
  <pre><code class="language-shell">$ composer install</code></pre>
  <p>Nous remarquons également que <code>Hoa\Core</code> a été installée en même
  temps car c'est une dépendance de <code>Hoa\Router</code> !</p>
  <p>Pour mettre le projet à jour :</p>
  <pre><code class="language-shell">$ composer update</code></pre>
  <p>Composer intègre <a href="http://packagist.org/">Packagist</a>, un service
  qui <strong>agrège</strong> l'ensemble des projets utilisables avec Composer.
  Les bibliothèques sont enregistrées vers le miroir Github car ce dernier
  propose une API HTTP pour récupérer les sources que Composer utilisera si
  jamais Git n'est pas installé sur la machine. Seul PHP est donc
  nécessaire au minimum.</p>

  <!--
  <h3 id="Depuis_une_archive_compressee" for="main-toc">Depuis une archive
  compressée</h3>

  <p>Hoa propose des archives compressées sous plusieurs formats : 7z, tar.bz2,
  tar.gz et zip. Ces archives sont accessibles de deux manières :</p>
  <ul>
    <li><em>via</em> HTTP :
        <a href="http://download.hoa-project.net/">http://download.hoa-project.net/</a> ;</li>
    <li><em>via</em> WebDAV :
        <a href="http://dav.hoa-project.net/">http://dav.hoa-project.net/</a>
        (en invité et en lecture seule).</li>
  </ul>
  <p>Les archives sont rangées suivant l'ordre établit par les dépôts. Les
  archives en <code>*.next.<em>format</em></code> contiennent le tronc, sinon
  elles correspondent à une version étiquettées. Plusieurs archives sont
  produites par jours concernant le tronc.</p>

  <h3 id="Depuis_une_archive_Phar" for="main-toc">Depuis une archive Phar</h3>

  <p>PHP fournit son propre système d'archive : <a
  href="http://php.net/phar">PHP Archive (Phar)</a>, afin de distribuer plus
  uniformément ses programmes écrits en PHP (ou avec d'autres langages). Ce
  format est devenu standard avant PHP 5.3.3, qui est la version minimum pour
  utiliser Hoa. Il est donc naturel de le proposer.</p>
  <p>Ce format d'archive est disponible aux mêmes endroits que
  <a href="#Depuis_une_archive_compressee">les archives compressées</a>,
  toutefois, l'archive est exécutable :</p>
  <pre><code class="language-shell">$ mkdir -p /usr/local/lib/hoa
$ cd !!$
$ wget http://download.hoa-project.net/Central/Hoa.next.phar
$ php Hoa.next.phar
Usage   : Hoa.next.phar &amp;lt;options&amp;gt;
Options :
    -m, - -metadata  : Print all metadata.
    -t, - -test      : Test if Hoa is in this Phar.
    -s, - -signature : Print signature.
    -p, - -phar      : Phar informations.
    -e, - -extract   : Extract Hoa in the current directory.
    -h, - -help      : This help.
    -?, - -help      : This help.</code></pre>
  <p>Si le résultat obtenu n'est pas celui escompté, il faudra modifier le
  paramètre <code>detect_unicode</code> dans votre fichier
  <code>php.ini</code> pour le passer à <code>0</code>. Ou sinon,
  directement :</p>
  <pre><code class="language-shell">$ php -d detect_unicode=0 Hoa.next.phar
Usage   : Hoa.next.phar &amp;lt;options&amp;gt;
Options :
    …</code></pre>
  <p>Il est conseillé d'extraire Hoa avec l'option <code>-e</code> ou
  <code>- -extract</code>. Cela va extraire Hoa au même niveau que
  l'archive :</p>
  <pre><code class="language-shell">$ php Hoa.next.phar - -extract
Extracted in /usr/local/lib/hoa</code></pre>
  -->

  <h3 id="Confort_maximal" for="main-toc">Confort maximal</h3>

  <p>Tout d'abord, commençons par une installation <strong>globale</strong>,
  c'est à dire sur le système, en dehors d'une application. Pour les systèmes
  respectants le
  <a href="http://www.linuxfoundation.org/collaborate/workgroups/lsb/fhs" lang="en">Filesystem
  Hierarchy Standard</a> (dans sa version 2.2 minimum), Hoa préfèrera
  s'installer dans le dossier <code>/usr/local/lib/Hoa/</code>. Pour les autres
  systèmes, comme par exemple Windows, Hoa préfèrera s'installer dans le dossier
  <code>C:\Program Files\Hoa\</code>.</p>
  <p>Pour une installation <strong>locale</strong>, c'est à dire dans une
  application, il n'y a aucune recommandation. Sachez néanmoins que pour
  Composer, par défaut, Hoa sera installé dans le dossier
  <code>vendor/hoa/</code>.</p>
  <p>Enfin, jusqu'à maintenant, nous avons parlé d'installation par parties,
  chaque bibliothèque une par une, et non pas d'installation
  <strong>totale</strong> comme avec le central. Une installation totale est
  plutôt utilisée dans le cas d'une installation globale. Pour respecter notre
  recommandation, il faudra user d'un lien symbolique, par exemple :</p>
  <pre><code class="language-shell">$ git clone http://git.hoa-project.net/Central.git /usr/local/Hoa.central
$ ln -s /usr/local/Hoa.central/Hoa /usr/local/lib/Hoa</code></pre>
  <p>Hoa est également capable de jongler entre deux installations : si une
  bibliothèque n'est pas trouvée localement (dans le contexte d'une
  application), alors Hoa pourra chercher globalement, sans perdre en
  performance. Cela permet de développer des bibliothèques dédiées à une
  application sans pour autant dupliquer Hoa à chaque fois.</p>

  <h2 id="Tester_l-installation" for="main-toc">Tester
  l'installation</h2>

  <p>Pour tester l'installation de Hoa, rien de plus simple :</p>
  <pre><code class="language-php">&amp;lt;?php

require_once '/usr/local/lib/Hoa/Core/Core.php';
var_dump(HOA);</code></pre>
  <p>ou directement en ligne de commande :</p>
  <pre><code class="language-shell">$ php -r "require_once '/usr/local/lib/Hoa/Core/Core.php'; var_dump(HOA);"</code></pre>
  <p>À l'exécution, nous devons voir <code>bool(true)</code>. Si c'est le cas,
  c'est que Hoa est correctement installé.</p>

  <h2 id="Installer_PHP" for="main-toc">Installer PHP</h2>

  <p>Toutes les informations sont présentes dans le manuel de PHP :
  <a href="http://php.net/install"><em lang="en">Installation and
  Configuration</em></a>. Hoa requiert PHP5.3.3 au minimum.</p>

  <ul class="prev_next">
    <li><a href="@ll:chapter=Introduction"><previous_chapter />
        Introduction</a></li>
    <li><a href="@ll:chapter=Core">Exploration du noyau <next_chapter /></a></li>
  </ul>

</yield>
</definition>
